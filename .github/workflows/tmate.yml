name: Create VPS

on:
  workflow_dispatch:
  repository_dispatch:
    types: [create-vps]

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📁 Create dirs
        run: mkdir -p links .backup

      - name: 💾 Restore backup
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          if [ -f ".backup/$name.zip" ]; then
            echo "📦 Restoring backup..."
            unzip ".backup/$name.zip" -d . || echo "⚠️ Failed to restore."
          else
            echo "⚠️ No backup found, starting fresh."
          fi

      - name: 🔐 Start tmate session
        run: |
          sudo apt update && sudo apt install -y tmate zip curl
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          echo "$SSH" > "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "$SSH" > ssh.txt
          echo "✅ SSH Ready: $SSH"

      - name: 📦 Save backup
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          zip -r ".backup/$name.zip" . -x ".git/*" ".github/*" ".backup/*" || true
          cp ".backup/$name.zip" ".backup/$name-latest.zip"

      - name: 📤 Push backup + SSH (force)
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔁 Update SSH + backup"
          file_pattern: 'links/*.txt .backup/*.zip ssh.txt'
          push_options: '--force'

      - name: 📢 Send SSH to Discord webhook
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d "{\\"content\\": \\"🔐 **New SSH:** $(cat ssh.txt)\\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: ⏳ Keep alive for 6 hours
        run: |
          echo "⏳ VPS running..."
          sleep $((360 * 60))
