name: 🌱 Create & Auto-Restore VPS

on:
  workflow_dispatch:          # ✅ Manual button
  repository_dispatch:        # ✅ API trigger
    types: [create-vps]

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: 📁 Create folders
        run: mkdir -p links .backup

      - name: 💾 Auto Restore backup
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          if [ -f ".backup/$name.zip" ]; then
            echo "📦 Restoring backup..."
            unzip ".backup/$name.zip" -d . || echo "⚠️ Failed to unzip"
          else
            echo "⚠️ No backup zip found, starting fresh"
          fi

      - name: 🐧 Install Docker & other tools
        run: |
          sudo su
          sudo apt update
          npm install -g pm2

      - name: 🐡 Install & start PufferPanel in Docker
        run: |
          sudo su
          apt update
          apt --fix-broken install -y
          apt upgrade -y
          apt autoremove -y
          apt clean
          apt install -y dconf-service systemd-sysv
          dpkg --get-selections | grep hold
          sudo su
          sudo apt install systemctl -y
          curl -s https://packagecloud.io/install/repositories/pufferpanel/pufferpanel/script.deb.sh?any=true | sudo bash
          sudo apt-get install -y pufferpanel
          sudo systemctl enable --now pufferpanel

      - name: ➕ Create new user & set password
        run: |
          sudo useradd -m newuser
          echo 'newuser:strongpassword' | sudo chpasswd
          sudo usermod -aG sudo newuser

      - name: 🔐 Start tmate SSH session
        run: |
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          echo "$SSH" > "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "✅ SSH Ready: $SSH"

          # 📢 Send SSH to Discord
          curl -X POST -H "Content-Type: application/json" \
            -d "{\"content\": \"@zerioak 📡 **New SSH Link:** $SSH\"}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: 📦 Save backup (pm2 list, docker config etc)
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          zip -r ".backup/$name.zip" . -x ".git/*" ".github/*" ".backup/*" || true

      - name: 📤 Commit & Push backup & SSH
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔁 Auto backup & SSH update for ${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          file_pattern: 'links/*.txt .backup/*.zip'

      - name: 🔄 Trigger self workflow for auto restart
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
          event-type: create-vps
          client-payload: '{"vps_name":"manual-vps"}'

      - name: ⏳ Keep VPS alive (6 hours)
        run: |
          echo "⏳ Keeping VPS alive..."
          sleep $((360 * 60))
